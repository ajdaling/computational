%!PS-Adobe-2.0
%%Title: bessel_error.ps
%%Creator: gnuplot 5.0 patchlevel 3
%%CreationDate: Thu Feb 23 13:45:19 2017
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 554 50 lineto 554 770 lineto 50 770 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.1 (Oct 2015)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTB {BL [] LCb DL} def
/LTw {PL [] 1 setgray} def
/LTb {PL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {textshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     textshow 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (bessel_error.ps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.0 patchlevel 3)
  /Author (aj)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Thu Feb 23 13:45:19 2017)
  /DOCINFO pdfmark
end
} ifelse
%
% Support for boxed text - Ethan A Merritt May 2005
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { Boxing
    { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if } def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox 1 1 1 setrgbcolor fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
% redundant definitions for compatibility with prologue.ps older than 5.0.2
/LTB {BL [] LCb DL} def
/LTb {PL [] LCb DL} def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {gsave BackgroundColor C clippath fill grestore} if
1.000 UL
LTb
LCb setrgbcolor
686 448 M
63 0 V
6198 0 R
-63 0 V
stroke
602 448 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
686 1333 M
63 0 V
6198 0 R
-63 0 V
stroke
602 1333 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.2)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
686 2217 M
63 0 V
6198 0 R
-63 0 V
stroke
602 2217 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.4)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
686 3102 M
63 0 V
6198 0 R
-63 0 V
stroke
602 3102 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.6)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
686 3986 M
63 0 V
6198 0 R
-63 0 V
stroke
602 3986 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.8)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
686 4871 M
63 0 V
6198 0 R
-63 0 V
stroke
602 4871 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
686 448 M
0 63 V
0 4360 R
0 -63 V
stroke
686 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
1312 448 M
0 63 V
0 4360 R
0 -63 V
stroke
1312 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 10)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
1938 448 M
0 63 V
0 4360 R
0 -63 V
stroke
1938 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 20)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
2564 448 M
0 63 V
0 4360 R
0 -63 V
stroke
2564 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 30)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
3190 448 M
0 63 V
0 4360 R
0 -63 V
stroke
3190 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 40)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
3817 448 M
0 63 V
0 4360 R
0 -63 V
stroke
3817 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 50)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
4443 448 M
0 63 V
0 4360 R
0 -63 V
stroke
4443 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 60)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
5069 448 M
0 63 V
0 4360 R
0 -63 V
stroke
5069 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 70)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
5695 448 M
0 63 V
0 4360 R
0 -63 V
stroke
5695 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 80)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
6321 448 M
0 63 V
0 4360 R
0 -63 V
stroke
6321 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 90)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
6947 448 M
0 63 V
0 4360 R
0 -63 V
stroke
6947 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 100)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
686 4871 N
686 448 L
6261 0 V
0 4423 V
-6261 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
LCb setrgbcolor
112 2659 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (Relative Error)]
] -46.7 MCshow
grestore
LTb
LCb setrgbcolor
3816 98 M
[ [(Helvetica) 140.0 0.0 true true 0 (X)]
] -46.7 MCshow
LTb
% Begin plot #1
1.000 UP
1.000 UL
LTb
0.58 0.00 0.83 C LCb setrgbcolor
6296 4738 M
[ [(Helvetica) 140.0 0.0 true true 0 (Relative Difference)]
] -46.7 MRshow
1.000 UP
1.000 UL
LTb
0.58 0.00 0.83 C 692 4871 Pls
699 4871 Pls
705 4871 Pls
711 4871 Pls
717 4871 Pls
724 4871 Pls
730 4871 Pls
736 4871 Pls
742 4863 Pls
749 4855 Pls
755 4602 Pls
761 4871 Pls
767 4871 Pls
774 701 Pls
780 771 Pls
786 515 Pls
792 454 Pls
799 448 Pls
805 452 Pls
811 451 Pls
817 448 Pls
824 448 Pls
830 448 Pls
836 448 Pls
843 448 Pls
849 448 Pls
855 448 Pls
861 448 Pls
868 448 Pls
874 448 Pls
880 448 Pls
886 448 Pls
893 448 Pls
899 448 Pls
905 448 Pls
911 448 Pls
918 448 Pls
924 448 Pls
930 448 Pls
936 448 Pls
943 448 Pls
949 448 Pls
955 448 Pls
961 448 Pls
968 448 Pls
974 448 Pls
980 448 Pls
987 448 Pls
993 448 Pls
999 448 Pls
1005 448 Pls
1012 448 Pls
1018 448 Pls
1024 448 Pls
1030 448 Pls
1037 448 Pls
1043 448 Pls
1049 448 Pls
1055 448 Pls
1062 448 Pls
1068 448 Pls
1074 448 Pls
1080 448 Pls
1087 448 Pls
1093 448 Pls
1099 448 Pls
1105 448 Pls
1112 448 Pls
1118 448 Pls
1124 448 Pls
1131 448 Pls
1137 448 Pls
1143 448 Pls
1149 448 Pls
1156 448 Pls
1162 448 Pls
1168 448 Pls
1174 448 Pls
1181 448 Pls
1187 448 Pls
1193 448 Pls
1199 448 Pls
1206 448 Pls
1212 448 Pls
1218 448 Pls
1224 448 Pls
1231 448 Pls
1237 448 Pls
1243 448 Pls
1249 448 Pls
1256 448 Pls
1262 448 Pls
1268 448 Pls
1275 448 Pls
1281 448 Pls
1287 448 Pls
1293 448 Pls
1300 448 Pls
1306 448 Pls
1312 448 Pls
1318 448 Pls
1325 448 Pls
1331 448 Pls
1337 448 Pls
1343 448 Pls
1350 448 Pls
1356 448 Pls
1362 448 Pls
1368 448 Pls
1375 448 Pls
1381 448 Pls
1387 448 Pls
1393 448 Pls
1400 448 Pls
1406 448 Pls
1412 448 Pls
1419 448 Pls
1425 448 Pls
1431 448 Pls
1437 448 Pls
1444 448 Pls
1450 448 Pls
1456 448 Pls
1462 448 Pls
1469 448 Pls
1475 448 Pls
1481 448 Pls
1487 448 Pls
1494 448 Pls
1500 448 Pls
1506 448 Pls
1512 448 Pls
1519 448 Pls
1525 448 Pls
1531 448 Pls
1537 448 Pls
1544 448 Pls
1550 448 Pls
1556 448 Pls
1563 448 Pls
1569 448 Pls
1575 448 Pls
1581 448 Pls
1588 448 Pls
1594 448 Pls
1600 448 Pls
1606 448 Pls
1613 448 Pls
1619 448 Pls
1625 448 Pls
1631 448 Pls
1638 448 Pls
1644 448 Pls
1650 448 Pls
1656 448 Pls
1663 448 Pls
1669 448 Pls
1675 448 Pls
1681 448 Pls
1688 448 Pls
1694 448 Pls
1700 448 Pls
1707 448 Pls
1713 448 Pls
1719 448 Pls
1725 448 Pls
1732 448 Pls
1738 448 Pls
1744 448 Pls
1750 448 Pls
1757 448 Pls
1763 448 Pls
1769 448 Pls
1775 448 Pls
1782 448 Pls
1788 448 Pls
1794 448 Pls
1800 448 Pls
1807 448 Pls
1813 448 Pls
1819 448 Pls
1826 448 Pls
1832 448 Pls
1838 448 Pls
1844 448 Pls
1851 448 Pls
1857 448 Pls
1863 448 Pls
1869 448 Pls
1876 448 Pls
1882 448 Pls
1888 448 Pls
1894 448 Pls
1901 448 Pls
1907 448 Pls
1913 448 Pls
1919 448 Pls
1926 448 Pls
1932 448 Pls
1938 448 Pls
1944 448 Pls
1951 448 Pls
1957 448 Pls
1963 448 Pls
1970 448 Pls
1976 448 Pls
1982 448 Pls
1988 448 Pls
1995 448 Pls
2001 448 Pls
2007 448 Pls
2013 448 Pls
2020 448 Pls
2026 448 Pls
2032 448 Pls
2038 448 Pls
2045 448 Pls
2051 448 Pls
2057 448 Pls
2063 448 Pls
2070 448 Pls
2076 448 Pls
2082 448 Pls
2088 448 Pls
2095 448 Pls
2101 448 Pls
2107 448 Pls
2114 448 Pls
2120 448 Pls
2126 448 Pls
2132 448 Pls
2139 448 Pls
2145 448 Pls
2151 448 Pls
2157 448 Pls
2164 448 Pls
2170 448 Pls
2176 448 Pls
2182 448 Pls
2189 448 Pls
2195 448 Pls
2201 448 Pls
2207 448 Pls
2214 448 Pls
2220 448 Pls
2226 448 Pls
2232 448 Pls
2239 448 Pls
2245 448 Pls
2251 448 Pls
2258 448 Pls
2264 448 Pls
2270 448 Pls
2276 448 Pls
2283 448 Pls
2289 448 Pls
2295 448 Pls
2301 448 Pls
2308 448 Pls
2314 448 Pls
2320 448 Pls
2326 448 Pls
2333 448 Pls
2339 448 Pls
2345 448 Pls
2351 448 Pls
2358 448 Pls
2364 448 Pls
2370 448 Pls
2376 448 Pls
2383 448 Pls
2389 448 Pls
2395 448 Pls
2402 448 Pls
2408 448 Pls
2414 448 Pls
2420 448 Pls
2427 448 Pls
2433 448 Pls
2439 448 Pls
2445 448 Pls
2452 448 Pls
2458 448 Pls
2464 448 Pls
2470 448 Pls
2477 448 Pls
2483 448 Pls
2489 448 Pls
2495 448 Pls
2502 448 Pls
2508 448 Pls
2514 448 Pls
2520 448 Pls
2527 448 Pls
2533 448 Pls
2539 448 Pls
2546 448 Pls
2552 448 Pls
2558 448 Pls
2564 448 Pls
2571 448 Pls
2577 448 Pls
2583 448 Pls
2589 448 Pls
2596 448 Pls
2602 448 Pls
2608 448 Pls
2614 448 Pls
2621 448 Pls
2627 448 Pls
2633 448 Pls
2639 448 Pls
2646 448 Pls
2652 448 Pls
2658 448 Pls
2664 448 Pls
2671 448 Pls
2677 448 Pls
2683 448 Pls
2690 448 Pls
2696 448 Pls
2702 448 Pls
2708 448 Pls
2715 448 Pls
2721 448 Pls
2727 448 Pls
2733 448 Pls
2740 448 Pls
2746 448 Pls
2752 448 Pls
2758 448 Pls
2765 448 Pls
2771 448 Pls
2777 448 Pls
2783 448 Pls
2790 448 Pls
2796 448 Pls
2802 448 Pls
2808 448 Pls
2815 448 Pls
2821 448 Pls
2827 448 Pls
2834 448 Pls
2840 448 Pls
2846 448 Pls
2852 448 Pls
2859 448 Pls
2865 448 Pls
2871 448 Pls
2877 448 Pls
2884 448 Pls
2890 448 Pls
2896 448 Pls
2902 448 Pls
2909 448 Pls
2915 448 Pls
2921 448 Pls
2927 448 Pls
2934 448 Pls
2940 448 Pls
2946 448 Pls
2952 448 Pls
2959 448 Pls
2965 448 Pls
2971 448 Pls
2978 448 Pls
2984 448 Pls
2990 448 Pls
2996 448 Pls
3003 448 Pls
3009 448 Pls
3015 448 Pls
3021 448 Pls
3028 448 Pls
3034 448 Pls
3040 448 Pls
3046 449 Pls
3053 448 Pls
3059 448 Pls
3065 448 Pls
3071 448 Pls
3078 448 Pls
3084 448 Pls
3090 448 Pls
3096 448 Pls
3103 448 Pls
3109 448 Pls
3115 448 Pls
3122 448 Pls
3128 448 Pls
3134 448 Pls
3140 448 Pls
3147 448 Pls
3153 448 Pls
3159 448 Pls
3165 448 Pls
3172 448 Pls
3178 448 Pls
3184 448 Pls
3190 448 Pls
3197 448 Pls
3203 448 Pls
3209 448 Pls
3215 448 Pls
3222 448 Pls
3228 448 Pls
3234 449 Pls
3240 450 Pls
3247 450 Pls
3253 449 Pls
3259 449 Pls
3266 448 Pls
3272 448 Pls
3278 448 Pls
3284 448 Pls
3291 448 Pls
3297 449 Pls
3303 449 Pls
3309 449 Pls
3316 449 Pls
3322 449 Pls
3328 449 Pls
3334 450 Pls
3341 451 Pls
3347 453 Pls
3353 461 Pls
3359 552 Pls
3366 462 Pls
3372 457 Pls
3378 455 Pls
3384 455 Pls
3391 455 Pls
3397 455 Pls
3403 456 Pls
3410 458 Pls
3416 461 Pls
3422 467 Pls
3428 479 Pls
3435 521 Pls
3441 784 Pls
3447 507 Pls
3453 484 Pls
3460 476 Pls
3466 472 Pls
3472 471 Pls
3478 470 Pls
3485 471 Pls
3491 472 Pls
3497 474 Pls
3503 477 Pls
3510 481 Pls
3516 488 Pls
3522 497 Pls
3528 510 Pls
3535 532 Pls
3541 569 Pls
3547 647 Pls
3554 878 Pls
3560 4871 Pls
3566 1123 Pls
3572 826 Pls
3579 744 Pls
3585 716 Pls
3591 713 Pls
3597 729 Pls
3604 767 Pls
3610 835 Pls
3616 963 Pls
3622 1243 Pls
3629 2192 Pls
3635 4871 Pls
3641 1937 Pls
3647 1290 Pls
3654 1067 Pls
3660 962 Pls
3666 908 Pls
3672 881 Pls
3679 872 Pls
3685 878 Pls
3691 899 Pls
3698 934 Pls
3704 988 Pls
3710 1068 Pls
3716 1187 Pls
3723 1367 Pls
3729 1660 Pls
3735 2190 Pls
3741 3363 Pls
3748 4871 Pls
3754 4871 Pls
3760 4871 Pls
3766 3983 Pls
3773 3277 Pls
3779 3013 Pls
3785 2984 Pls
3791 3152 Pls
3798 3573 Pls
3804 4465 Pls
3810 4871 Pls
3817 4871 Pls
3823 4871 Pls
3829 4871 Pls
3835 4250 Pls
3842 3181 Pls
3848 2622 Pls
3854 2292 Pls
3860 2086 Pls
3867 1957 Pls
3873 1881 Pls
3879 1847 Pls
3885 1849 Pls
3892 1887 Pls
3898 1964 Pls
3904 2090 Pls
3910 2284 Pls
3917 2583 Pls
3923 3062 Pls
3929 3898 Pls
3935 4871 Pls
3942 4871 Pls
3948 4871 Pls
3954 4871 Pls
3961 4871 Pls
3967 4281 Pls
3973 3517 Pls
3979 3110 Pls
3986 2901 Pls
3992 2835 Pls
3998 2910 Pls
4004 3185 Pls
4011 3872 Pls
4017 4871 Pls
4023 4871 Pls
4029 4871 Pls
4036 2363 Pls
4042 1473 Pls
4048 1047 Pls
4054 797 Pls
4061 630 Pls
4067 508 Pls
4073 484 Pls
4079 566 Pls
4086 641 Pls
4092 714 Pls
4098 789 Pls
4105 869 Pls
4111 960 Pls
4117 1065 Pls
4123 1194 Pls
4130 1355 Pls
4136 1564 Pls
4142 1848 Pls
4148 2252 Pls
4155 2870 Pls
4161 3913 Pls
4167 4871 Pls
4173 4871 Pls
4180 4871 Pls
4186 4871 Pls
4192 4871 Pls
4198 4871 Pls
4205 4871 Pls
4211 4871 Pls
4217 4871 Pls
4223 4847 Pls
4230 4871 Pls
4236 4871 Pls
4242 4871 Pls
4249 4871 Pls
4255 4871 Pls
4261 4871 Pls
4267 4871 Pls
4274 4871 Pls
4280 4871 Pls
4286 4871 Pls
4292 4871 Pls
4299 4871 Pls
4305 4871 Pls
4311 4871 Pls
4317 4871 Pls
4324 4871 Pls
4330 4871 Pls
4336 4645 Pls
4342 4517 Pls
4349 4485 Pls
4355 4551 Pls
4361 4726 Pls
4367 4871 Pls
4374 4871 Pls
4380 4871 Pls
4386 4871 Pls
4393 4871 Pls
4399 4871 Pls
4405 4871 Pls
4411 4871 Pls
4418 4871 Pls
4424 4718 Pls
4430 3551 Pls
4436 2829 Pls
4443 2339 Pls
4449 1984 Pls
4455 1713 Pls
4461 1499 Pls
4468 1322 Pls
4474 1172 Pls
4480 1039 Pls
4486 918 Pls
4493 802 Pls
4499 689 Pls
4505 572 Pls
4511 448 Pls
4518 587 Pls
4524 748 Pls
4530 944 Pls
4537 1194 Pls
4543 1527 Pls
4549 2002 Pls
4555 2734 Pls
4562 4009 Pls
4568 4871 Pls
4574 4871 Pls
4580 4871 Pls
4587 4871 Pls
4593 4871 Pls
4599 4871 Pls
4605 4871 Pls
4612 4871 Pls
4618 4871 Pls
4624 4804 Pls
4630 4798 Pls
4637 4871 Pls
4643 4871 Pls
4649 4871 Pls
4655 4871 Pls
4662 4871 Pls
4668 4871 Pls
4674 4871 Pls
4681 4871 Pls
4687 4871 Pls
4693 4871 Pls
4699 4871 Pls
4706 4871 Pls
4712 4871 Pls
4718 4871 Pls
4724 4871 Pls
4731 4871 Pls
4737 4871 Pls
4743 4871 Pls
4749 4871 Pls
4756 4871 Pls
4762 4871 Pls
4768 4825 Pls
4774 4871 Pls
4781 4871 Pls
4787 4871 Pls
4793 4871 Pls
4799 4871 Pls
4806 4871 Pls
4812 4871 Pls
4818 3918 Pls
4825 2019 Pls
4831 1159 Pls
4837 674 Pls
4843 534 Pls
4850 754 Pls
4856 919 Pls
4862 1051 Pls
4868 1164 Pls
4875 1264 Pls
4881 1358 Pls
4887 1451 Pls
4893 1545 Pls
4900 1645 Pls
4906 1753 Pls
4912 1874 Pls
4918 2014 Pls
4925 2178 Pls
4931 2375 Pls
4937 2620 Pls
4943 2932 Pls
4950 3345 Pls
4956 3921 Pls
4962 4780 Pls
4969 4871 Pls
4975 4871 Pls
4981 4871 Pls
4987 4871 Pls
4994 4871 Pls
5000 4871 Pls
5006 4871 Pls
5012 4871 Pls
5019 4116 Pls
5025 3504 Pls
5031 3068 Pls
5037 2741 Pls
5044 2486 Pls
5050 2281 Pls
5056 2110 Pls
5062 1966 Pls
5069 1839 Pls
5075 1726 Pls
5081 1622 Pls
5087 1524 Pls
5094 1428 Pls
5100 1330 Pls
5106 1227 Pls
5113 1113 Pls
5119 982 Pls
5125 823 Pls
5131 620 Pls
5138 551 Pls
5144 948 Pls
5150 1580 Pls
5156 2733 Pls
5163 4871 Pls
5169 4871 Pls
5175 4871 Pls
5181 4871 Pls
5188 4871 Pls
5194 4871 Pls
5200 4871 Pls
5206 4871 Pls
5213 4827 Pls
5219 4798 Pls
5225 4854 Pls
5231 4871 Pls
5238 4871 Pls
5244 4871 Pls
5250 4871 Pls
5257 4871 Pls
5263 4871 Pls
5269 4871 Pls
5275 4871 Pls
5282 4871 Pls
5288 4871 Pls
5294 4871 Pls
5300 4871 Pls
5307 4871 Pls
5313 4871 Pls
5319 4871 Pls
5325 4871 Pls
5332 4871 Pls
5338 4871 Pls
5344 4871 Pls
5350 4871 Pls
5357 4871 Pls
5363 4728 Pls
5369 4434 Pls
5375 4225 Pls
5382 4103 Pls
5388 4101 Pls
5394 4354 Pls
5401 4871 Pls
5407 4453 Pls
5413 1393 Pls
5419 1956 Pls
5426 2140 Pls
5432 2217 Pls
5438 2254 Pls
5444 2273 Pls
5451 2286 Pls
5457 2298 Pls
5463 2311 Pls
5469 2328 Pls
5476 2350 Pls
5482 2379 Pls
5488 2416 Pls
5494 2463 Pls
5501 2520 Pls
5507 2592 Pls
5513 2680 Pls
5519 2789 Pls
5526 2926 Pls
5532 3100 Pls
5538 3323 Pls
5545 3620 Pls
5551 4028 Pls
5557 4620 Pls
5563 4871 Pls
5570 4871 Pls
5576 4871 Pls
5582 4871 Pls
5588 4871 Pls
5595 4871 Pls
5601 4871 Pls
5607 3945 Pls
5613 2955 Pls
5620 2323 Pls
5626 1880 Pls
5632 1551 Pls
5638 1292 Pls
5645 1081 Pls
5651 902 Pls
5657 746 Pls
5663 606 Pls
5670 476 Pls
5676 544 Pls
5682 666 Pls
5689 788 Pls
5695 915 Pls
5701 1050 Pls
5707 1197 Pls
5714 1362 Pls
5720 1554 Pls
5726 1783 Pls
5732 2067 Pls
5739 2434 Pls
5745 2933 Pls
5751 3664 Pls
5757 4847 Pls
5764 4871 Pls
5770 4871 Pls
5776 4871 Pls
5782 4871 Pls
5789 4871 Pls
5795 4871 Pls
5801 4671 Pls
5807 3855 Pls
5814 3312 Pls
5820 2922 Pls
5826 2626 Pls
5833 2393 Pls
5839 2202 Pls
5845 2041 Pls
5851 1901 Pls
5858 1777 Pls
5864 1664 Pls
5870 1558 Pls
5876 1457 Pls
5883 1356 Pls
5889 1253 Pls
5895 1145 Pls
5901 1027 Pls
5908 895 Pls
5914 741 Pls
5920 553 Pls
5926 580 Pls
5933 897 Pls
5939 1348 Pls
5945 2046 Pls
5952 3279 Pls
5958 4871 Pls
5964 4871 Pls
5970 4871 Pls
5977 4871 Pls
5983 4871 Pls
5989 4871 Pls
5995 4871 Pls
6002 4539 Pls
6008 4244 Pls
6014 4048 Pls
6020 3919 Pls
6027 3838 Pls
6033 3795 Pls
6039 3783 Pls
6045 3799 Pls
6052 3840 Pls
6058 3908 Pls
6064 4004 Pls
6070 4131 Pls
6077 4295 Pls
6083 4504 Pls
6089 4771 Pls
6096 4871 Pls
6102 4871 Pls
6108 4871 Pls
6114 4871 Pls
6121 4871 Pls
6127 4871 Pls
6133 4871 Pls
6139 4871 Pls
6146 4871 Pls
6152 4871 Pls
6158 3023 Pls
6164 1242 Pls
6171 904 Pls
6177 1949 Pls
6183 2956 Pls
6189 4051 Pls
6196 4871 Pls
6202 4871 Pls
6208 4871 Pls
6214 4871 Pls
6221 4871 Pls
6227 4871 Pls
6233 4871 Pls
6240 4871 Pls
6246 4871 Pls
6252 4871 Pls
6258 4871 Pls
6265 4871 Pls
6271 4871 Pls
6277 4871 Pls
6283 4871 Pls
6290 4871 Pls
6296 4871 Pls
6302 4871 Pls
6308 4833 Pls
6315 4683 Pls
6321 4578 Pls
6327 4517 Pls
6333 4503 Pls
6340 4544 Pls
6346 4657 Pls
6352 4871 Pls
6358 4871 Pls
6365 4871 Pls
6371 4871 Pls
6377 4871 Pls
6384 4871 Pls
6390 4871 Pls
6396 2135 Pls
6402 979 Pls
6409 518 Pls
6415 883 Pls
6421 1129 Pls
6427 1306 Pls
6434 1441 Pls
6440 1550 Pls
6446 1642 Pls
6452 1723 Pls
6459 1797 Pls
6465 1868 Pls
6471 1938 Pls
6477 2010 Pls
6484 2086 Pls
6490 2168 Pls
6496 2260 Pls
6502 2365 Pls
6509 2486 Pls
6515 2632 Pls
6521 2811 Pls
6528 3037 Pls
6534 3334 Pls
6540 3743 Pls
6546 4347 Pls
6553 4871 Pls
6559 4871 Pls
6565 4871 Pls
6571 4871 Pls
6578 4871 Pls
6584 4871 Pls
6590 3892 Pls
6596 2748 Pls
6603 2065 Pls
6609 1607 Pls
6615 1276 Pls
6621 1021 Pls
6628 817 Pls
6634 647 Pls
6640 500 Pls
6646 527 Pls
6653 646 Pls
6659 758 Pls
6665 866 Pls
6672 973 Pls
6678 1081 Pls
6684 1193 Pls
6690 1313 Pls
6697 1443 Pls
6703 1590 Pls
6709 1758 Pls
6715 1959 Pls
6722 2206 Pls
6728 2522 Pls
6734 2951 Pls
6740 3575 Pls
6747 4578 Pls
6753 4871 Pls
6759 4871 Pls
6765 4871 Pls
6772 4871 Pls
6778 4871 Pls
6784 4696 Pls
6790 3517 Pls
6797 2813 Pls
6803 2339 Pls
6809 1995 Pls
6816 1731 Pls
6822 1518 Pls
6828 1340 Pls
6834 1187 Pls
6841 1051 Pls
6847 927 Pls
6853 812 Pls
6859 701 Pls
6866 593 Pls
6872 484 Pls
6878 524 Pls
6884 642 Pls
6891 769 Pls
6897 911 Pls
6903 1072 Pls
6909 1262 Pls
6916 1494 Pls
6922 1789 Pls
6928 2183 Pls
6934 2749 Pls
6941 3643 Pls
6947 4871 Pls
6579 4738 Pls
% End plot #1
2.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
686 4871 N
686 448 L
6261 0 V
0 4423 V
-6261 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
